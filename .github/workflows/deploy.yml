name: SubQL Deploy

# **What it does**: This action deploys to subql

on:
  push:
    branches:
      - main
      - release-*
      - deployments-testing
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  # subql_deploy_embrio_staging:
  #   if: ${{ github.repository == 'embrio-tech/centrifuge-subql'}}
  #   name: Deploy to SubQL (EMBRIO staging)
  #   strategy:
  #     matrix:
  #       chainId: [ development-embrio ] # ADD ARRAY OF CHAINS TO DEPLOY
  #   uses: ./.github/workflows/subql_deploy_workflow.yaml
  #   with:
  #     chainId: ${{ matrix.chainId }}
  #     projOrg: embrio-tech
  #     projImage: 'https://explorer.subquery.network/uploads/1660216119964.png'
  #     deploymentType: primary
  #     resetProject: true
  #   secrets:
  #     accessToken: ${{ secrets.SUBQL_ACCESS_TOKEN }}

  subql_deploy_centrifuge_staging:
    if: ${{ github.repository == 'sophialittlejohn/pools-subql' && github.ref_name == 'deployments-testing' }}
    name: Deploy to SubQL (CENTRIFUGE staging)
    strategy:
      matrix:
        chainId: [development, demo] # ADD ARRAY OF CHAINS TO DEPLOY
    uses: ./.github/workflows/subql_deploy_workflow.yaml
    with:
      chainId: ${{ matrix.chainId }}
      projOrg: sophialittlejohn
      projImage: 'https://centrifuge.io/static/bfb7682cb6ed4aa422d9d2c90cd9351a/centrifuge-logomark-black.svg'
      deploymentType: primary
      resetProject: true
    secrets:
      accessToken: ${{ secrets.SUBQL_ACCESS_TOKEN }}

  # subql_deploy_centrifuge_production:
  #   if: ${{ github.repository == 'centrifuge/pools-subql' && startsWith(github.ref_name, 'release-') }}
  #   name: Deploy to SubQL (CENTRIFUGE mainnet)
  #   strategy:
  #     matrix:
  #       chainId: [ altair, catalyst, centrifuge ] # ADD ARRAY OF CHAINS TO DEPLOY
  #   uses: ./.github/workflows/subql_deploy_workflow.yaml
  #   with:
  #     chainId: ${{ matrix.chainId }}
  #     projOrg: centrifuge
  #     projImage: 'https://centrifuge.io/static/bfb7682cb6ed4aa422d9d2c90cd9351a/centrifuge-logomark-black.svg'
  #     deploymentType: stage
  #     resetProject: false
  #   secrets:
  #     accessToken: ${{ secrets.SUBQL_ACCESS_TOKEN }}
